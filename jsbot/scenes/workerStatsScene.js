const { Scenes, Markup } = require('telegraf');
const { updateUserSceneStep } = require('../utils/user');

// –°—Ü–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—á–µ–≥–æ
const workerStatsScene = new Scenes.BaseScene('workerStatsScene');

// –î–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–∑–∞–º–µ–Ω–∏ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î)
const workerStats = {
    completedTasks: 125,
    failedTasks: 1,
    declinedTasks: 4,
    skippedTasks: 3,
    rating: 4.7, // –†–µ–π—Ç–∏–Ω–≥ –æ—Ç 1 –¥–æ 5
    bonusPoints: 1200, // –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–æ–Ω—É—Å–æ–≤
};

workerStatsScene.enter(async (ctx) => {
    await updateUserSceneStep(ctx.from.id, ctx.scene.current.id, ctx.session.step);
    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    const statsMessage = `
    <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
    ‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${ctx.session.workerInfo.completedTasks}
    ‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${ctx.session.workerInfo.lateTasks}
    üö´ –û—Ç–∫–∞–∑–æ–≤: ${ctx.session.workerInfo.declinedTasks}
    ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${ctx.session.workerInfo.rating.toFixed(1)} / 5
    üéÅ –ë–æ–Ω—É—Å–Ω—ã–µ –æ—á–∫–∏: ${ctx.session.workerInfo.bonus}

    –†–∞–±–æ—Ç–∞–π—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥!`;

    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
    const statsButtons = Markup.inlineKeyboard([
        [Markup.button.callback('–ù–∞–∑–∞–¥', 'back_to_main')],
    ]);

    await ctx.replyWithHTML(statsMessage, statsButtons);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
workerStatsScene.action('back_to_main', async (ctx) => {
    await ctx.answerCbQuery();
    await ctx.scene.enter('mainScene');
});

module.exports = workerStatsScene;
